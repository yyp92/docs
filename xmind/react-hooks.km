{
    "root": {
        "data": {
            "id": "ct845ueiuyw0",
            "created": 1686313262964,
            "text": "React Hooks"
        },
        "children": [
            {
                "data": {
                    "id": "ct8464v4qi80",
                    "created": 1686313285736,
                    "text": "v18之前"
                },
                "children": [
                    {
                        "data": {
                            "id": "ctc9jt9v13c0",
                            "created": 1686734702980,
                            "text": "useState"
                        },
                        "children": [
                            {
                                "data": {
                                    "id": "ctc9koxbxo00",
                                    "created": 1686734771879,
                                    "text": "定义变量，使其具备类组件的state，让函数式组件更新视图的能力"
                                },
                                "children": []
                            }
                        ]
                    },
                    {
                        "data": {
                            "id": "ctc9jwbx1pc0",
                            "created": 1686734709635,
                            "text": "useEffect"
                        },
                        "children": [
                            {
                                "data": {
                                    "id": "ctc9ltz8tmg0",
                                    "created": 1686734861243,
                                    "text": "副作用，这个钩子成功弥补了函数式组件没有生命周期的缺陷"
                                },
                                "children": []
                            }
                        ]
                    },
                    {
                        "data": {
                            "id": "ctc9k04cr5s0",
                            "created": 1686734717884,
                            "text": "useContext"
                        },
                        "children": [
                            {
                                "data": {
                                    "id": "ctc9odl378g0",
                                    "created": 1686735060651,
                                    "text": "上下文，类似于Context，其本意就是设置全局共享数据，使所有组件可跨层级实现共享"
                                },
                                "children": []
                            }
                        ]
                    },
                    {
                        "data": {
                            "id": "ctc9k0y8ofk0",
                            "created": 1686734719691,
                            "text": "useReducer"
                        },
                        "children": [
                            {
                                "data": {
                                    "id": "ctc9pxcf4go0",
                                    "created": 1686735182027,
                                    "text": "功能类似于redux，与redux最大的不同点是在于它是单个组件的状态管理，组件通讯还是要通过props，是一种useState的升级版，处理复杂的state变化"
                                },
                                "children": []
                            }
                        ]
                    },
                    {
                        "data": {
                            "id": "ctc9k1snqtk0",
                            "created": 1686734721531,
                            "text": "useMemo"
                        },
                        "children": [
                            {
                                "data": {
                                    "id": "ctc9rv4ih1k0",
                                    "created": 1686735333923,
                                    "text": "理念与memo相同，都是判断是否满足当前的限定条件来决定是否执行callback函数"
                                },
                                "children": []
                            }
                        ]
                    },
                    {
                        "data": {
                            "id": "ctc9k2o5qwo0",
                            "created": 1686734723435,
                            "text": "useCallback"
                        },
                        "children": [
                            {
                                "data": {
                                    "id": "ctc9sx2b1sw0",
                                    "created": 1686735416508,
                                    "text": "与useMemo及其类似，甚至可以说一模一样，唯一不同的点在于，useMemo返回的值，而useCallback返回的是函数"
                                },
                                "children": []
                            }
                        ]
                    },
                    {
                        "data": {
                            "id": "ctc9k3glfd40",
                            "created": 1686734725155,
                            "text": "useRef"
                        },
                        "children": [
                            {
                                "data": {
                                    "id": "ctc9u8gs2ug0",
                                    "created": 1686735519692,
                                    "text": "用于获取当前元素的所有属性，除此之外，还有一个高级用法：缓存数据"
                                },
                                "children": []
                            }
                        ]
                    },
                    {
                        "data": {
                            "id": "ctc9k49zp1c0",
                            "created": 1686734726932,
                            "text": "useImperativeHandle"
                        },
                        "children": [
                            {
                                "data": {
                                    "id": "ctc9vzrqc8o0",
                                    "created": 1686735657491,
                                    "text": "可以通过 ref 或 forwardRef 暴露给父组件的实例值，所谓的实例值是指值和函数"
                                },
                                "children": []
                            }
                        ]
                    },
                    {
                        "data": {
                            "id": "ctc9k52jypk0",
                            "created": 1686734728659,
                            "text": "useLayoutEffect"
                        },
                        "children": [
                            {
                                "data": {
                                    "id": "ctc9xb756fc0",
                                    "created": 1686735760732,
                                    "text": "与 useEffect 基本一致，不同点在于它是同步执行的"
                                },
                                "children": []
                            }
                        ]
                    },
                    {
                        "data": {
                            "id": "ctc9k60os5k0",
                            "created": 1686734730723,
                            "text": "useDebugValue"
                        },
                        "children": [
                            {
                                "data": {
                                    "id": "ctc9xu3zgzs0",
                                    "created": 1686735801900,
                                    "text": "可用于在 React 开发者工具中显示自定义 hook 的标签，这个 hooks 目的就是检查自定义 hooks。"
                                },
                                "children": []
                            }
                        ]
                    }
                ]
            },
            {
                "data": {
                    "id": "ct8467cji140",
                    "created": 1686313291142,
                    "text": "v18"
                },
                "children": [
                    {
                        "data": {
                            "id": "ct846y0jqzk0",
                            "created": 1686313349190,
                            "text": "useSyncExternalStore"
                        },
                        "children": [
                            {
                                "data": {
                                    "id": "ct847j2sbao0",
                                    "created": 1686313395038,
                                    "text": "介绍：会通过强制的同步状态更新，使得外部store可以支持并发读取"
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": "ct847kakvvc0",
                                    "created": 1686313397686,
                                    "text": "Params"
                                },
                                "children": [
                                    {
                                        "data": {
                                            "id": "ct849qbahhk0",
                                            "created": 1686313567518,
                                            "text": "subscribe: 订阅函数，用于注册一个回调函数，当存储值发生更改时被调用"
                                        },
                                        "children": []
                                    },
                                    {
                                        "data": {
                                            "id": "ct849rm493k0",
                                            "created": 1686313570350,
                                            "text": "getSnapshot: 返回当前存储值的函数。必须返回缓存的值。"
                                        },
                                        "children": []
                                    },
                                    {
                                        "data": {
                                            "id": "ct849sj2nk00",
                                            "created": 1686313572342,
                                            "text": "getServerSnapshot: 返回服务端（hydration模式下）渲染期间使用的存储值得函数"
                                        },
                                        "children": []
                                    }
                                ]
                            },
                            {
                                "data": {
                                    "id": "ct847lnj1ko0",
                                    "created": 1686313400646,
                                    "text": "Result  state:数据源，用于渲染UI层的数据源"
                                },
                                "children": []
                            }
                        ]
                    },
                    {
                        "data": {
                            "id": "ct84dp64uj40",
                            "created": 1686313878486,
                            "text": "useTransition"
                        },
                        "children": [
                            {
                                "data": {
                                    "id": "ct84equ9dm00",
                                    "created": 1686313960486,
                                    "text": "介绍：返回一个状态值表示过度更新任务的等待状态，以及一个启动该过渡更新任务的函数。"
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": "ct84errby480",
                                    "created": 1686313962486,
                                    "text": "Result"
                                },
                                "children": [
                                    {
                                        "data": {
                                            "id": "ct84gbpoumg0",
                                            "created": 1686314084286,
                                            "text": "isPending: 布尔值，过渡状态的标志，为true时表示等待状态"
                                        },
                                        "children": []
                                    },
                                    {
                                        "data": {
                                            "id": "ct84gcvmgv40",
                                            "created": 1686314086822,
                                            "text": "startTransition: 可以将里面的任务变成过渡更新任务"
                                        },
                                        "children": []
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "data": {
                            "id": "ct84dy7lls00",
                            "created": 1686313898166,
                            "text": "useDeferredValue"
                        },
                        "children": [
                            {
                                "data": {
                                    "id": "ct84ij0kh940",
                                    "created": 1686314256910,
                                    "text": "介绍：可以让状态滞后派生，与 useTransition 类似。允许用户推迟屏幕更新优先级不分高低。"
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": "ct84ik76yfs0",
                                    "created": 1686314259487,
                                    "text": "Params"
                                },
                                "children": [
                                    {
                                        "data": {
                                            "id": "ct84kli56zk0",
                                            "created": 1686314419054,
                                            "text": "value: 接受一个可变的值，如 useState 所创建的值"
                                        },
                                        "children": []
                                    }
                                ]
                            },
                            {
                                "data": {
                                    "id": "ct84il49aq00",
                                    "created": 1686314261486,
                                    "text": "Result"
                                },
                                "children": [
                                    {
                                        "data": {
                                            "id": "ct84lbv5nww0",
                                            "created": 1686314476438,
                                            "text": "deferredValue: 返回一个延迟状态的值"
                                        },
                                        "children": []
                                    }
                                ]
                            },
                            {
                                "data": {
                                    "id": "ct84impo7140",
                                    "created": 1686314264958,
                                    "text": "扩展：什么场景下使用 useDeferredValue 和 useTransition ?"
                                },
                                "children": []
                            }
                        ]
                    },
                    {
                        "data": {
                            "id": "ct84e02ortk0",
                            "created": 1686313902222,
                            "text": "useInsertionEffect"
                        },
                        "children": [
                            {
                                "data": {
                                    "id": "ct84mmcoth40",
                                    "created": 1686314577630,
                                    "text": "介绍：与 useEffect 一样，但它在所有 DOM 突变之前同步触发"
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": "ct84mnnjt0g0",
                                    "created": 1686314580463,
                                    "text": "与 useEffect 和 useLayoutEffect 的区别"
                                },
                                "children": []
                            }
                        ]
                    },
                    {
                        "data": {
                            "id": "ct84e1645080",
                            "created": 1686313904606,
                            "text": "useId"
                        },
                        "children": [
                            {
                                "data": {
                                    "id": "ct84nx84ie00",
                                    "created": 1686314679662,
                                    "text": "topic"
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": "ct84nyfrsbk0",
                                    "created": 1686314682303,
                                    "text": "Result "
                                },
                                "children": [
                                    {
                                        "data": {
                                            "id": "ct84o50lwe00",
                                            "created": 1686314696622,
                                            "text": "id: 生成一个服务端和客户端统一的id"
                                        },
                                        "children": []
                                    }
                                ]
                            }
                        ]
                    }
                ]
            }
        ]
    },
    "template": "right",
    "theme": "fresh-blue",
    "version": "1.4.43"
}